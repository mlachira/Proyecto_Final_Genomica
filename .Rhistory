#Libreria phyloseq
library(phyloseq)
library(MGnifyR)
#Base de datos microbioma de osos
mgclnt <- mgnify_client(usecache = T, cache_dir = '/tmp/MGnify_cache')
accession_list <- mgnify_analyses_from_studies(mgclnt, "MGYS00003951", usecache = T)
meta_dataframe <- mgnify_get_analyses_metadata(mgclnt, accession_list, usecache = T )
oso <- mgnify_get_analyses_phyloseq(mgclnt, meta_dataframe$analysis_accession, usecache = T)
oso
#Para limpiar la base
oso_limpio <- subset_taxa(oso, !(Genus %in% "NA"))
oso_limpio
save(oso_limpio, file = "Data/oso_limpio_genero")
View(oso_limpio)
oso_limpio <- subset_taxa(oso, !(Family %in% "NA"))
oso_limpio_F <- subset_taxa(oso, !(Family %in% "NA"))
oso_limpio_F
otu_table(oso_limpio)
sample_data(oso_limpio)
tax_table(oso_limpio)
View(tax_table(oso_limpio))
oso_limpio_F <- subset_taxa(oso, !(Family %in% c("NA")))
View(tax_table(oso_limpio_F))
oso_limpio_F <- subset_taxa(oso, !(Family %in% c(NA)))
View(tax_table(oso_limpio_F))
#Para limpiar la base
oso_limpio_G <- subset_taxa(oso, !(Genus %in% NA))
oso_limpio_G
View(tax_table(oso_limpio_G))
save(oso_limpio_G, file = "Data/oso_limpio_familia")
save(oso_limpio_G, file = "Data/oso_limpio_genero")
#Base de datos microbioma peces
mgclnt <- mgnify_client(usecache = T, cache_dir = '/tmp/MGnify_cache')
accession_list <- mgnify_analyses_from_studies(mgclnt, "MGYS00003748", usecache = T)
meta_dataframe <- mgnify_get_analyses_metadata(mgclnt, accession_list, usecache = T )
peces <- mgnify_get_analyses_phyloseq(mgclnt, meta_dataframe$analysis_accession, usecache = T)
peces
#Para limpiar la base
pez_limpio_G <- subset_taxa(peces, !(Genus %in% c(NA)))
pez_limpio_G
save(pez_limpio_G, file= "Data/pes_limpio_G")
save(pez_limpio_G, file= "Data/pez_limpio_G")
save(pez_limpio_G, file= "Data/pez_limpio_genero")
View(tax_table(pez_limpio_G))
#Limpio la base boorando aquelas muestras que tengan NA en Familia
pez_limpio_F <- subset_taxa(peces, !(Family %in% c(NA)))
pez_limpio_F
save(pez_limpio_F, file= "Data/pez_limpio_familia")
View(tax_table(pez_limpio_F))
#En MGnify se encontro una base de datos sobre "Microbioma intestinal de osos en hibernación"
#Las muestras se recolectaron del colón 17 osos negros (Ursus americanus) en hibernación en Minessota, EUA.
#Se identificaron las bacterias presentes en la microbioma utilizando 16S aplicon data
#https://www.ebi.ac.uk/metagenomics/studies/MGYS00003951#overview
#Study MGYS00003951
mgclnt <- mgnify_client(usecache = T, cache_dir = '/tmp/MGnify_cache')
accession_list <- mgnify_analyses_from_studies(mgclnt, "MGYS00003951", usecache = T)
meta_dataframe <- mgnify_get_analyses_metadata(mgclnt, accession_list, usecache = T )
oso_limpio@sam_data
#En MGnify se encontro una base de datos sobre "Microbioma intestinal de osos en hibernación"
#Las muestras se recolectaron del colón 17 osos negros (Ursus americanus) en hibernación en Minessota, EUA.
#Se identificaron las bacterias presentes en la microbioma utilizando 16S aplicon data
#https://www.ebi.ac.uk/metagenomics/studies/MGYS00003951#overview
#Study MGYS00003951
mgclnt <- mgnify_client(usecache = T, cache_dir = '/tmp/MGnify_cache')
accession_list <- mgnify_analyses_from_studies(mgclnt, "MGYS00003951", usecache = T)
meta_dataframe <- mgnify_get_analyses_metadata(mgclnt, accession_list, usecache = T )
oso <- mgnify_get_analyses_phyloseq(mgclnt, meta_dataframe$analysis_accession, usecache = T)
#Borramos de la base de datos aquellos que en Familia tengan NA
oso_limpio_F <- subset_taxa(oso, !(Genus %in% c(NA)))
oso_limpio_F
#Con la función view me permite ver las muestras y si nivel taxonomico
View(tax_table(oso_limpio_F))
#Con save creamos un objeto llamado oso_limpio_familia para que así otras puedan cargar la base de datos sin la necesidad de hacer todo lo anterior, solo con la función load y nombre del objeto
save(oso_limpio_F, file="Data/oso_limpio_familia")
#Al tener el analisis de phyloseq de la base de datos de oso nos dimos cuenta que tiene varias NA en genero y había menos en familia, por lo que se creo un objeto de cada uno
#Borramos de la base de datos aquellos que en Familia tengan NA
oso_limpio_F_1 <- subset_taxa(oso, !(Family %in% c(NA)))
oso_limpio_F_1
#Con la función view me permite ver las muestras y si nivel taxonomico
View(tax_table(oso_limpio_F_1))
#Con save creamos un objeto llamado oso_limpio_familia para que así otras puedan cargar la base de datos sin la necesidad de hacer todo lo anterior, solo con la función load y nombre del objeto
save(oso_limpio_F_1, file="Data/oso_limpio_1_familia")
#Borramos de la base de datos aquellos que en Genero tengan NA
oso_limpio_G_1 <- subset_taxa(oso, !(Genus %in% c(NA)))
oso_limpio_G_1
#Con la función view me permite ver las muestras y si nivel taxonomico
View(tax_table(oso_limpio_G_1))
#Con save creamos un objeto llamado oso_limpio_familia para que así otras puedan cargar la base de datos sin la necesidad de hacer todo lo anterior, solo con la función load y nombre del objeto
save(oso_limpio_G_1, file="Data/oso_limpio_1_genero")
#En MGnify se encontro una base de datos de ""
#
#
#
mgclnt <- mgnify_client(usecache = T, cache_dir = '/tmp/MGnify_cache')
accession_list <- mgnify_analyses_from_studies(mgclnt, "MGYS00003748", usecache = T)
meta_dataframe <- mgnify_get_analyses_metadata(mgclnt, accession_list, usecache = T )
peces <- mgnify_get_analyses_phyloseq(mgclnt, meta_dataframe$analysis_accession, usecache = T)
peces
#Al tener el analisis de phyloseq de la base de datos de peces nos dimos cuenta que tiene varias NA en genero y había menos en familia, por lo que se creo un objeto de cada uno
#Borramos de la base de datos aquellos que en Familia tengan NA
pez_limpio_F_1 <- subset_taxa(peces, !(Family %in% c(NA)))
pez_limpio_F_1
View(tax_table(pez_limpio_F_1))
#Con save creamos un objeto llamado oso_limpio_familia para que así otras puedan cargar la base de datos sin la necesidad de hacer todo lo anterior, solo con la función load y nombre del objeto
save(pez_limpio_F_1, file="Data/pez_limpio_1_familia")
#Borramos de la base de datos aquellos que en Genero tengan NA
pez_limpio_G_1 <- subset_taxa(peces, !(Genus %in% c(NA)))
pez_limpio_G_1
#Con la función view me permite ver las muestras y si nivel taxonomico
View(tax_table(pez_limpio_G_1))
#Con save creamos un objeto llamado oso_limpio_familia para que así otras puedan cargar la base de datos sin la necesidad de hacer todo lo anterior, solo con la función load y nombre del objeto
save(pez_limpio_G_1, file="Data/pez_limpio_1_genero")
#####
otu_table(peces)
