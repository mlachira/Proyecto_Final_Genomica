#Diversidad beta
oso.famialia.bray<- ordinate(oso_limpio_F_1, method="MDS", distance="bray")
library(phyloseq) # also the basis of data object. Data analysis and visualization
#Por alguna razon ya corre estos
oso.genero.bray<- ordinate(oso_limpio_G_1, method="MDS", distance="bray")
load("Data/oso_limpio_1_familia")
getwd()
setwd("C:/Users/gabof/OneDrive/Documentos/GitHub/Proyecto_Final_Genomica_Funcional")
load("Data/oso_limpio_1_familia")
load("Data/oso_limpio_1_genero")
#load("Data/oso_limpio_2_familia")
#load("Data/oso_limpio_2_genero")
load("Data/pez_limpio_1_familia")
load("Data/pez_limpio_1_genero")
#Diversidad beta
oso.famialia.bray<- ordinate(oso_limpio_F_1, method="MDS", distance="bray")
oso.famialia.bray
#Por alguna razon ya corre estos
oso.genero.bray<- ordinate(oso_limpio_G_1, method="MDS", distance="bray")
plot_ordination(oso.famialia.bray)
#Diversidad beta
oso.familia.bray<- ordinate(oso_limpio_F_1, method="MDS", distance="bray")
oso.familia.bray
plot_ordination(oso_limpio_F_1, ordinate(GP, "DCA"), "samples", color="SampleType")
#Por alguna razon ya corre estos
oso.genero.bray<- ordinate(oso_limpio_G_1, method="MDS", distance="bray")
dist_bc <- as.matrix(vegdist(oso_limpio_F_1, method = "bray"))
#Curva de rarefacción
#Oso limpio Familia
library(vegan)
dist_bc <- as.matrix(vegdist(oso_limpio_F_1, method = "bray"))
pcoa_bc = ordinate(oso_limpio_F_1, "PCoA", "bray")
plot_ordination(oso_limpio_F_1, pcoa_bc, color = "site") +
geom_point(size = 3)
plot_ordination(oso_limpio_F_1, pcoa_bc, color = "nuevacol") +
geom_point(size = 3)
plot_ordination(oso_limpio_F_1, pcoa_bc) +
geom_point(size = 3)
pcoa_bc
pcoa_bc = ordinate(oso_limpio_G_1, "PCoA", "bray")
pcoa_bc
pcoa_bc1 = ordinate(oso_limpio_G_1, "PCoA", "bray")
pcoa_bc1
pcoa_bc1 = ordinate(oso_limpio_G_1, "PCoA", "bray")
pcoa_bc1
pcoa_bc1 = ordinate(oso_limpio_F_1, "PCoA", "bray")
pcoa_bc1
# Para juntar los phyloseq de ambas bases de familias:
base_juntas<-merge_phyloseq(oso_limpio_F_1, pez_limpio_F_1)
View(sample_data(base_juntas))
taxas_juntas<- tax_glom(base_juntas, taxrank="Family", NArm=TRUE, bad_empty=c(NA, "", " ", "\t"))
taxas_juntas
pcoa_bc1 = ordinate(taxas_juntas, "PCoA", "bray")
pcoa_bc1
pcoa_bc2 = ordinate(taxas_juntas, "PCoA", "bray")
pcoa_bc2
physeq_list_betaDiv(oso_limpio_F_1, method = "unifrac", weighted = TRUE,
fast = TRUE, normalized = TRUE, parallel = FALSE)
vegdist(sample_data(oso_limpio_F_1))
vegdist(sample_data(oso_limpio_F_1, na.rm=FALSE))
vegdist(sample_data(oso_limpio_F_1, method= "bray"))
vegdist(sample_data(taxas_juntas, method= "bray"))
#Diversidad beta
oso.familia.bray<- ordinate(oso_limpio_F_1, method="MDS", distance="bray")
oso.familia.bray
oso_limpio_F_1
View(sample_data(oso_limpio_F_1))
oso_limpio_G_1
View(sample_data(oso_limpio_G_1))
#Por alguna razon ya corre estos
oso.genero.bray<- ordinate(oso_limpio_G_1, method="MDS", distance="bray")
View(oso_limpio_F_1)
#Curva de rarefacción
#Oso limpio Familia
library(vegan)
#Diversidad alfa
# Shannon
# Simpson
library("microbiome")
library(microbiome)
library("BiocManager")
library(phyloseq) # also the basis of data object. Data analysis and visualization
library(vegan) # some utility tools
library(dplyr) # data handling
library(ggplot2)
#install.packages("eulerr")
library(eulerr)
getwd()
load("Data/oso_limpio_1_familia")
load("Data/oso_limpio_1_genero")
#load("Data/oso_limpio_2_familia")
#load("Data/oso_limpio_2_genero")
load("Data/pez_limpio_1_familia")
load("Data/pez_limpio_1_genero")
# Adicion de una columna:
sample_data(oso_limpio_F_1)$nuevacol<-"DATA_OSO1"
#sample_data(oso_limpio_F_2)$nuevacol<-"DATA_OSO2"
sample_data(oso_limpio_G_1)$nuevacol<-"DATA_OSO1"
#sample_data(oso_limpio_G_2)$nuevacol<-"DATA_OSO2"
sample_data(pez_limpio_F_1)$nuevacol<-"DATA_PEZ1"
sample_data(pez_limpio_G_1)$nuevacol<-"DATA_PEZ1"
# Para juntar los phyloseq de ambas bases de familias:
base_juntas<-merge_phyloseq(oso_limpio_F_1, pez_limpio_F_1)
taxas_juntas<- tax_glom(base_juntas, taxrank="Family", NArm=TRUE, bad_empty=c(NA, "", " ", "\t"))
load("Data/taxas_juntas")
#####
pseq.rel <- microbiome::transform(taxas_juntas, "compositional")
head(prevalence(pseq.rel, detection = 1/100, sort = TRUE))
head(prevalence(pseq.rel, detection = 1/100, sort = TRUE, count = TRUE))
core.taxa.standard <- core_members(pseq.rel, detection = 0, prevalence = 50/100)
pseq.core <- core(pseq.rel, detection = 0, prevalence = .5)
pseq.core2 <- aggregate_rare(pseq.rel, "Genus", detection = 0, prevalence = .5)
pseq.core2 <- aggregate_rare(pseq.rel, "Family", detection = 0, prevalence = .5)
core.taxa <- taxa(pseq.core)
core.abundance <- sample_sums(core(pseq.rel, detection = .01, prevalence = .95))
core.abundance <- sample_sums(core(pseq.rel, detection = .05, prevalence = .95))
core.abundance <- sample_sums(core(pseq.rel, detection = .0, prevalence = .95))
core.abundance <- sample_sums(core(pseq.rel, detection = .1, prevalence = .95))
det <- c(0, 0.1, 0.5, 2, 5, 20)/100
prevalences <- seq(.05, 1, .05)
plot_core(pseq.rel,
prevalences = prevalences,
detections = det,
plot.type = "lineplot") +
xlab("Relative Abundance (%)")
#Core microbiome
core<- plot_core(pseq.rel,
prevalences = prevalences,
detections = det,
plot.type = "lineplot") +
xlab("Relative Abundance (%)")
save(core, file = "Plots/core_microbiome")
###Heatmap
install.packages("RColorBrewer")
###Heatmap
install.packages("RColorBrewer")
install.packages("RColorBrewer")
library(RColorBrewer)
installed.packages("reshape")
library(reshape)
install.packages("reshape")
library(reshape)
prevalences <- seq(.05, 1, .05)
detections <- round(10^seq(log10(0.01), log10(.2), length = 9), 3)
# Also define gray color palette
gray <- gray(seq(0,1,length=5))
#Added pseq.rel, I thin... must be checked if it was in the the rednred version,; where it is initialized
#pseq.rel<- microbiome::transform(pseq, 'compositional')
#min-prevalence gets the 100th highest prevalence
p <- plot_core(pseq.rel,
plot.type = "heatmap",
colours = gray,
prevalences = prevalences,
detections = detections,
min.prevalence = prevalence(pseq.rel, sort = TRUE)[100]) +
labs(x = "Detection Threshold\n(Relative Abundance (%))") +
#Adjusts axis text size and legend bar height
theme(axis.text.y= element_text(size=8, face="italic"),
axis.text.x.bottom=element_text(size=8),
axis.title = element_text(size=10),
legend.text = element_text(size=8),
legend.title = element_text(size=10))
nstall.packages("remotes")
install.packages("remotes")
remotes::install_github("microbiome/microbiome")
install.packages("remotes")
remotes::install_github("microbiome/microbiome")
p <- plot_core(pseq.rel,
plot.type = "heatmap",
colours = gray,
prevalences = prevalences,
detections = detections,
min.prevalence = prevalence(pseq.rel, sort = TRUE)[100]) +
labs(x = "Detection Threshold\n(Relative Abundance (%))") +
#Adjusts axis text size and legend bar height
theme(axis.text.y= element_text(size=8, face="italic"),
axis.text.x.bottom=element_text(size=8),
axis.title = element_text(size=10),
legend.text = element_text(size=8),
legend.title = element_text(size=10))
library(microbiome)
p <- plot_core(pseq.rel,
plot.type = "heatmap",
colours = gray,
prevalences = prevalences,
detections = detections,
min.prevalence = prevalence(pseq.rel, sort = TRUE)[100]) +
labs(x = "Detection Threshold\n(Relative Abundance (%))") +
#Adjusts axis text size and legend bar height
theme(axis.text.y= element_text(size=8, face="italic"),
axis.text.x.bottom=element_text(size=8),
axis.title = element_text(size=10),
legend.text = element_text(size=8),
legend.title = element_text(size=10))
print(p)
save(p, file = "Plot/heat_map")
save(p, file = "Plots//heat_map")
detections <- seq(from = 50, to = round(max(abundances(pseq))/10, -1), by = 100)
detections <- seq(from = 50, to = round(max(abundances(taxas_juntas))/10, -1), by = 100)
p <- plot_core(taxas_juntas, plot.type = "heatmap",
prevalences = prevalences,
detections = detections,
colours = rev(brewer.pal(5, "Spectral")),
min.prevalence = .2, horizontal = TRUE) +
theme(axis.text.x= element_text(size=8, face="italic", hjust=1),
axis.text.y= element_text(size=8),
axis.title = element_text(size=10),
legend.text = element_text(size=8),
legend.title = element_text(size=10))
library(RColorBrewer)
p <- plot_core(taxas_juntas, plot.type = "heatmap",
prevalences = prevalences,
detections = detections,
colours = rev(brewer.pal(5, "Spectral")),
min.prevalence = .2, horizontal = TRUE) +
theme(axis.text.x= element_text(size=8, face="italic", hjust=1),
axis.text.y= element_text(size=8),
axis.title = element_text(size=10),
legend.text = element_text(size=8),
legend.title = element_text(size=10))
print(p)
p1 <- plot_core(taxas_juntas, plot.type = "heatmap",
prevalences = prevalences,
detections = detections,
colours = rev(brewer.pal(5, "Spectral")),
min.prevalence = .2, horizontal = TRUE) +
theme(axis.text.x= element_text(size=8, face="italic", hjust=1),
axis.text.y= element_text(size=8),
axis.title = element_text(size=10),
legend.text = element_text(size=8),
legend.title = element_text(size=10))
print(p1)
save(p1, file= "Plots/heatmap_mas_cosas")
# Same with log10 compositional abundances
x <- microbiome::transform(taxas_juntas, "compositional")
tax <- "Dialister"
plot_density(x, tax, log10 = TRUE) +
ggtitle("Relative abundance") +
xlab("Relative abundance (%)")
tax <- "Family"
plot_density(x, tax, log10 = TRUE) +
ggtitle("Relative abundance") +
xlab("Relative abundance (%)")
otu_table(taxas_juntas)
tax <- "F55775"
tax <- "55775"
plot_density(x, tax, log10 = TRUE) +
ggtitle("Relative abundance") +
xlab("Relative abundance (%)")
#Boxplot de abundancias
p <- boxplot_abundance(taxas_juntas_g, x = "group", y = "nuevacol") + scale_y_log10()
#Boxplot de abundancias
p <- boxplot_abundance(taxas_juntas, x = "group", y = "nuevacol") + scale_y_log10()
print(p)
#Boxplot de abundancias
p3 <- boxplot_abundance(taxas_juntas, x = "group", y = "nuevacol") + scale_y_log10()
print(p3)
#Boxplot de abundancias
p3 <- boxplot_abundance(taxas_juntas, x = "nuevacol", y = "Akkermansia") + scale_y_log10()
print(p3)
#Boxplot de abundancias
p3 <- boxplot_abundance(taxas_juntas, x = "nuevacol", y = "") + scale_y_log10()
print(p3)
#Boxplot de abundancias
p3 <- boxplot_abundance(taxas_juntas, x = "nuevacol", y = "55775") + scale_y_log10()
print(p3)
save(p3, file = "Plots/abundancia_55775")
#Para ver la variación de la microbiota
p4 <- plot_landscape(pseq.rel, method = "NMDS", distance = "bray", col = "group", size = 3)
print(p4)
#Para ver la variación de la microbiota
p4 <- plot_landscape(pseq.rel, method = "NMDS", distance = "bray", col = "nuevacol", size = 3)
coef <- coefficients(permanova)["group1",]
permanova <- adonis(t(otu) ~ group,
data = meta, permutations=99, method = "bray")
